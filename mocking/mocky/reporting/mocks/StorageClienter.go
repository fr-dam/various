// Code generated by mockery (devel). DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	storage "cloud.google.com/go/storage"
)

// StorageClienter is an autogenerated mock type for the StorageClienter type
type StorageClienter struct {
	mock.Mock
}

// GetBucketObjectIterator provides a mock function with given fields: ctx
func (_m *StorageClienter) GetBucketObjectIterator(ctx context.Context) *storage.ObjectIterator {
	ret := _m.Called(ctx)

	var r0 *storage.ObjectIterator
	if rf, ok := ret.Get(0).(func(context.Context) *storage.ObjectIterator); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storage.ObjectIterator)
		}
	}

	return r0
}

// GetBucketReader provides a mock function with given fields: ctx, name
func (_m *StorageClienter) GetBucketReader(ctx context.Context, name string) (*storage.Reader, error) {
	ret := _m.Called(ctx, name)

	var r0 *storage.Reader
	if rf, ok := ret.Get(0).(func(context.Context, string) *storage.Reader); ok {
		r0 = rf(ctx, name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storage.Reader)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBucketWriter provides a mock function with given fields: ctx, name
func (_m *StorageClienter) GetBucketWriter(ctx context.Context, name string) *storage.Writer {
	ret := _m.Called(ctx, name)

	var r0 *storage.Writer
	if rf, ok := ret.Get(0).(func(context.Context, string) *storage.Writer); ok {
		r0 = rf(ctx, name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storage.Writer)
		}
	}

	return r0
}
