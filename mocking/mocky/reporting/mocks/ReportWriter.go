// Code generated by mockery (devel). DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ReportWriter is an autogenerated mock type for the ReportWriter type
type ReportWriter struct {
	mock.Mock
}

// List provides a mock function with given fields: ctx
func (_m *ReportWriter) List(ctx context.Context) map[string][]byte {
	ret := _m.Called(ctx)

	var r0 map[string][]byte
	if rf, ok := ret.Get(0).(func(context.Context) map[string][]byte); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string][]byte)
		}
	}

	return r0
}

// Read provides a mock function with given fields: ctx, name
func (_m *ReportWriter) Read(ctx context.Context, name string) ([]byte, error) {
	ret := _m.Called(ctx, name)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(context.Context, string) []byte); ok {
		r0 = rf(ctx, name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Write provides a mock function with given fields: ctx, report
func (_m *ReportWriter) Write(ctx context.Context, report []byte) error {
	ret := _m.Called(ctx, report)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []byte) error); ok {
		r0 = rf(ctx, report)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
